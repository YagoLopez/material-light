import {Component, ViewChild, ElementRef, Renderer2} from '@angular/core';

@Component({
moduleId: module.id,
selector: 'yago-fullscreen',
template: `

<style>.cyan {color: cyan}</style>

<i #icon (click)="toggleFullScreen()" [ngClass]="{cyan: isFullScreen}" class="material-icons" 
  style="vertical-align: text-top; cursor: pointer">settings_overscan</i>

`//template
})
export class YagoFullscreenCmp {

  @ViewChild('icon') icon: ElementRef;
  public doc: any = document;
  private isFullScreen: boolean = false;

  constructor(private ren: Renderer2){
  }

  nOnInit(){

    document.addEventListener("fullscreenchange", function () {
      // fullscreenState.innerHTML = (document.fullscreen)? "" : "not ";
      console.log('hey');
    }, false);

    document.addEventListener("mozfullscreenchange", function () {
      // fullscreenState.innerHTML = (document.mozFullScreen)? "" : "not ";
      console.log('hey');
    }, false);

    document.addEventListener("webkitfullscreenchange", function () {
      // fullscreenState.innerHTML = (document.webkitIsFullScreen)? "" : "not ";
      console.log('hey');
    }, false);

    document.addEventListener("msfullscreenchange", function () {
      // fullscreenState.innerHTML = (document.msFullscreenElement)? "" : "not ";
      console.log('hey');
    }, false);

  }

  private toggleFullScreen(): void {
    if (!this.isFullScreen){
      this.goFullScreen();
      // this.icon.nativeElement.style.color = 'cyan';
      this.isFullScreen = true;
    } else {
      this.exitFullscreen();
      // this.icon.nativeElement.style.color = 'white';
      this.isFullScreen = false;
    }
  }

  private requestFullscreen(element: any): void {
    if (element.requestFullscreen) {
      element.requestFullscreen();
    } else if (element.mozRequestFullScreen) {
      element.mozRequestFullScreen();
    } else if (element.webkitRequestFullScreen) {
      element.webkitRequestFullScreen();
    }
  }

  private goFullScreen(): void {
    const doc: any = window.document;
    const fullscreenEnabled =
      doc.fullscreenEnabled || doc.mozFullScreenEnabled || doc.documentElement.webkitRequestFullScreen;
    if (fullscreenEnabled) {
      this.requestFullscreen(doc.documentElement);
    } else {
      window.alert('No fullscreen browser support');
    }
  }

  private exitFullscreen() {
    if(this.doc.exitFullscreen) {
      this.doc.exitFullscreen();
    } else if(this.doc.mozCancelFullScreen) {
      this.doc.mozCancelFullScreen();
    } else if(this.doc.webkitExitFullscreen) {
      this.doc.webkitExitFullscreen();
    }
  }
}
